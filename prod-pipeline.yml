resources:
- name: code-repo-dct
  type: git
  source: &code-repo-cache-dct
    uri: git@github.homedepot.com:SupplyChain-IPR/iom-dct-apps.git
    #TODO update the branch name
    branch: production-pipeline
    private_key: ((github-private-key))
  check_every: 10m

- name: repo-cache-dct
  type: gradle-cache
  check_every: 1m
  source:
    <<: *code-repo-cache-dct
    paths:
      - build.gradle
      - gradle.properties

- name: ci
  type: git
  source:
    uri: git@github.homedepot.com:ci-cd/concourse-common.git
    branch: master
    private_key: ((github-private-key))
  check_every: 30m


- name: ci-iom
  type: git
  source:
    uri: git@github.homedepot.com:SupplyChain-IPR/IOMServices_CICD.git
    branch: master
    private_key: ((github-private-key))
  check_every: 3m

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))
  check_every: 60m

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      registry_mirror: https://docker.artifactory.homedepot.com
      
  - name: gradle-cache
    type: docker-image
    source:
      repository: docker.artifactory.homedepot.com/concourse/gradle-cache-resource
      tag: latest
      registry_mirror: https://docker.artifactory.homedepot.com



jobs:
- name: Version
  max_in_flight: 1
  plan:
  - get: code-repo-dct
    trigger: false
  - get: ci
  - task: Version and Tag
    file: ci/concourse/github_version_and_tag.yml
    input_mapping: {code-repo: code-repo-dct}
    params:
      ENVIRONMENT: production
      GITHUB_PRIVATE_KEY: ((github-private-key))
      GITHUB_TOKEN: ((github-token))
      TRACKER_TOKEN: ((tracker-token))
      SLACK_WEBHOOK_URL: ((slack-webhook-url))
    on_failure:
      put: slack
      params:
        channel: ((slack-channel))
        username: concourse
        icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
        text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed versioning! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"

- name: Label Stories
  max_in_flight: 1
  plan:
  - get: code-repo-dct
    trigger: true
    passed: [Version]
  - get: ci
  - task: Label Stories (Pivotal Tracker)
    file: ci/concourse/tracker_label_stories.yml
    input_mapping: {code-repo: code-repo-dct}
    params:
      ENVIRONMENT: production
      GITHUB_PRIVATE_KEY: {{github-private-key}}
      GITHUB_TOKEN: {{github-token}}
      TRACKER_TOKEN: {{tracker-token}}
      SLACK_WEBHOOK_URL: {{slack-webhook-url}}
    on_failure:
      put: slack
      params:
        channel: ((slack-channel))
        username: concourse
        icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
        text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed labeling stories in Tracker! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"

- name: Build Artifact
  max_in_flight: 1
  plan:
  - get: code-repo-dct
    trigger: true
    passed: [Label Stories]
  - get: ci
  - get: ci-iom
  - get: repo-cache-dct
  - task: build
    file: ci/concourse/gradle_build.yml
    input_mapping: {code-repo: code-repo-dct, repo-cache: repo-cache-dct}
    params:
      GRADLE_USER_HOME: ../repo-cache/.gradle
      DIST_DIRECTORY: build/libs
      GITHUB_PRIVATE_KEY: {{github-private-key}}
      GITHUB_TOKEN: {{github-token}}
      SLACK_WEBHOOK_URL: {{slack-webhook-url}}
    on_failure:
      aggregate:
      - put: slack
        params:
          channel: ((slack-channel))
          username: concourse
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
          text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed building! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"
  - task: Upload to Artifactory
    file: ci-iom/concourse/artifactory_upload_artifact.yml
    input_mapping: {code-repo: code-repo-dct, dist: dist , ci: ci-iom}
    params:
      GITHUB_PRIVATE_KEY: ((github-private-key))
      GITHUB_TOKEN: ((github-token))
      ENVIRONMENT: production
      SLACK_WEBHOOK_URL: ((slack-webhook-url))
      ARTIFACTORY_TOKEN: ((artifactory-token))
    on_failure:
      aggregate:
      - put: slack
        params:
          channel: ((slack-channel))
          username: concourse
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
          text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed upload to Artifactory! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"

- name: Create CR
  plan:
  - get: code-repo-dct
    trigger: true
    passed: [Build Artifact]
  - get: ci
  - task: Create CR
    file: ci/concourse/snowfield_create_cr.yml
    input_mapping: {code-repo: code-repo-dct, deployments-repo: code-repo-dct}
    params:
      GITHUB_PRIVATE_KEY: ((github-private-key))
      GITHUB_TOKEN: ((github-token))
      ENVIRONMENT: production
      DEPLOYMENT_USER: ((deployment-user))
      SLACK_WEBHOOK_URL: ((slack-webhook-url))
      SNOWFIELD_USER: ((snowfield-user))
      TRACKER_TOKEN: ((tracker-token))
    on_failure:
      aggregate:
      - put: slack
        params:
          channel: ((slack-channel))
          username: concourse
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
          text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed creating CR! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"
  - put: code-repo-dct
    params:
      repository: updated-git

- name: Locksmith-ZONEA
  max_in_flight: 1
  plan:
  - get: code-repo-dct
    trigger: false
    passed: [Create CR]
  - get: ci
  - task: Locksmith
    file: ci/concourse/locksmith.yml
    input_mapping: {code-repo: code-repo-dct, deployments-repo: code-repo-dct}
    params:
      GITHUB_PRIVATE_KEY: {{github-private-key}}
      GITHUB_TOKEN: {{github-token}}
      ENVIRONMENT: production
      SLACK_WEBHOOK_URL: {{slack-webhook-url}}
      #TODO comment this line for executing in production
#      LOCKSMITH_URL: http://locksmith-api.apps-za.homedepot.com/api/grants
      LOCKSMITH_URL: https://locksmith-mock.apps-np.homedepot.com/api/grants
    on_failure:
      aggregate:
      - put: slack
        params:
          channel: ((slack-channel))
          username: concourse
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
          text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed invoking locksmith! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"

- name: Locksmith-ZONEB
  max_in_flight: 1
  plan:
  - get: code-repo-dct
    trigger: true
    passed: [Locksmith-ZONEA]
  - get: ci
  - task: Locksmith
    file: ci/concourse/locksmith.yml
    input_mapping: {code-repo: code-repo-dct, deployments-repo: code-repo-dct}
    params:
      GITHUB_PRIVATE_KEY: {{github-private-key}}
      GITHUB_TOKEN: {{github-token}}
      ENVIRONMENT: production
      SLACK_WEBHOOK_URL: {{slack-webhook-url}}
      #TODO comment this line for executing in production
#      LOCKSMITH_URL: http://locksmith-api.apps-zb.homedepot.com/api/grants
      LOCKSMITH_URL: https://locksmith-mock.apps-np.homedepot.com/api/grants
    on_failure:
      aggregate:
      - put: slack
        params:
          channel: ((slack-channel))
          username: concourse
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
          text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed invoking locksmith! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"

#
## IOM Mocked code
#- name: Locksmith
#  max_in_flight: 1
#  plan:
#  - get: code-repo-dct
#    trigger: false
#    passed: [Create CR]
#  - get: ci-iom
#  - task: Locksmith
#    file: ci-iom/concourse/locksmith.yml
#    input_mapping: {code-repo: code-repo-dct, deployments-repo: code-repo-dct , ci: ci-iom}
#    params:
#      GITHUB_PRIVATE_KEY: {{github-private-key}}
#      GITHUB_TOKEN: {{github-token}}
#      ENVIRONMENT: production
#      SLACK_WEBHOOK_URL: {{slack-webhook-url}}
#      LOCKSMITH_URL: https://locksmith-mock.apps-np.homedepot.com/api/grants
#    on_failure:
#      aggregate:
#      - put: slack
#        params:
#          channel: ((slack-channel))
#          username: concourse
#          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
#          text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed invoking locksmith! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"

- name: Deploy-ZoneA
  max_in_flight: 1
  plan:
  - get: code-repo-dct
    trigger: true
    passed: [Locksmith-ZONEA]
  - get: repo-cache-dct
  - get: ci
  - get: ci-iom
  - task: build
    file: ci/concourse/gradle_build.yml
    input_mapping: {code-repo: code-repo-dct, repo-cache: repo-cache-dct}
    params:
      GRADLE_USER_HOME: ../repo-cache/.gradle
      DIST_DIRECTORY: build/libs
      GITHUB_PRIVATE_KEY: {{github-private-key}}
      GITHUB_TOKEN: {{github-token}}
      SLACK_WEBHOOK_URL: {{slack-webhook-url}}
    on_failure:
      aggregate:
      - put: slack
        params:
          channel: ((slack-channel))
          username: concourse
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
          text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed building! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"
  - task: Deploy
    file: ci-iom/concourse/cloud_foundry_deploy_prod.yml
    input_mapping: {code-repo: code-repo-dct, deploy-repo: dist , ci: ci-iom}
    params:
          GITHUB_PRIVATE_KEY: ((github-private-key))
          GITHUB_TOKEN: ((github-token))
          ENVIRONMENT: prodza
          DEPLOYMENT_USER: ((prod-pipeline-cfuser))
          DEPLOYMENT_PWD: ((prod-pipeline-password))
          SLACK_WEBHOOK_URL: ((slack-webhook-url))
          #TODO update this value to production
          BUILD_TARGET: uat
          #TODO update the secrets file for correct values
          CF_API_ZONE_URL: ((cf-api-prod-zonea))
          CF_ORG: ((cf-org-prod))
          CF_SPACE: ((cf-space-prodza))
    on_failure:
      aggregate:
      - put: slack
        params:
          channel: ((slack-channel))
          username: concourse
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
          text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed deploying to PCF! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"

- name: Deploy-ZoneB
  max_in_flight: 1
  plan:
  - get: code-repo-dct
    trigger: true
    passed: [Locksmith-ZONEB]
  - get: repo-cache-dct
  - get: ci
  - get: ci-iom
  - task: build
    file: ci/concourse/gradle_build.yml
    input_mapping: {code-repo: code-repo-dct, repo-cache: repo-cache-dct}
    params:
      GRADLE_USER_HOME: ../repo-cache/.gradle
      DIST_DIRECTORY: build/libs
      GITHUB_PRIVATE_KEY: {{github-private-key}}
      GITHUB_TOKEN: {{github-token}}
      SLACK_WEBHOOK_URL: {{slack-webhook-url}}
    on_failure:
      aggregate:
      - put: slack
        params:
          channel: ((slack-channel))
          username: concourse
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
          text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed building! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"
  - task: Deploy
    file: ci-iom/concourse/cloud_foundry_deploy_prod.yml
    input_mapping: {code-repo: code-repo-dct, deploy-repo: dist , ci: ci-iom}
    params:
          GITHUB_PRIVATE_KEY: ((github-private-key))
          GITHUB_TOKEN: ((github-token))
          ENVIRONMENT: prodzb
          DEPLOYMENT_USER: ((prod-pipeline-cfuser))
          DEPLOYMENT_PWD: ((prod-pipeline-password))
          SLACK_WEBHOOK_URL: ((slack-webhook-url))
          #TODO update this value to production
          BUILD_TARGET: uat
          #TODO update the secrets file for correct values
          CF_API_ZONE_URL: ((cf-api-prod-zoneb))
          CF_ORG: ((cf-org-prod))
          CF_SPACE: ((cf-space-prodzb))
    on_failure:
      aggregate:
      - put: slack
        params:
          channel: ((slack-channel))
          username: concourse
          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
          text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed deploying to PCF! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"

#- name: Close CR
#  max_in_flight: 1
#  plan:
#  - get: code-repo-dct
#    trigger: true
#    passed: [Deploy-ZoneA]
#    passed: [Deploy-ZoneB]
#  - get: ci
#  - task: Close CR
#    file: ci/concourse/snowfield_close_cr.yml
#    input_mapping: {code-repo: code-repo-dct , deployments-repo: code-repo-dct }
#    params:
#      GITHUB_PRIVATE_KEY: ((github-private-key))
#      GITHUB_TOKEN: ((github-token))
#      ENVIRONMENT: production
#      DEPLOYMENT_USER: ((deployment-user))
#      SLACK_WEBHOOK_URL: ((slack-webhook-url))
#      SNOWFIELD_USER: ((snowfield-user))
#    on_failure:
#      aggregate:
#      - put: slack
#        params:
#          channel: ((slack-channel))
#          username: concourse
#          icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
#          text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed closing CR! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"

- name: Release Notes
  max_in_flight: 1
  plan:
  - get: code-repo-dct
    trigger: true
    passed: [Deploy-ZoneA]
    passed: [Deploy-ZoneB]
  - get: ci
  - task: Slack Release Notes
    file: ci/concourse/slack_release_notes.yml
    input_mapping: {code-repo: code-repo-dct }
    params:
      GITHUB_PRIVATE_KEY: ((github-private-key))
      GITHUB_TOKEN: ((github-token))
      ENVIRONMENT: production
      TRACKER_TOKEN: ((tracker-token))
      SLACK_WEBHOOK_URL: ((slack-webhook-url))
    on_failure:
      put: slack
      params:
        channel: ((slack-channel))
        username: concourse
        icon_url: https://avatars1.githubusercontent.com/u/7809479?v=3&s=200
        text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed shipping release notes to slack! <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|  Click for details.>"